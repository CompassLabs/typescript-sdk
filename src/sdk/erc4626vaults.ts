/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { erc4626VaultsVaultsDeposit } from "../funcs/erc4626VaultsVaultsDeposit.js";
import { erc4626VaultsVaultsVault } from "../funcs/erc4626VaultsVaultsVault.js";
import { erc4626VaultsVaultsWithdraw } from "../funcs/erc4626VaultsVaultsWithdraw.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Erc4626Vaults extends ClientSDK {
  /**
   * Get Vault & User Position
   *
   * @remarks
   * Get Vault data & User Position.
   *
   * The user position is only included if 'user_address' parameter is included.
   */
  async vaultsVault(
    request: operations.V1VaultsVaultRequest,
    options?: RequestOptions,
  ): Promise<components.VaultGetVaultResponse> {
    return unwrapAsync(erc4626VaultsVaultsVault(
      this,
      request,
      options,
    ));
  }

  /**
   * Deposit to Vault
   *
   * @remarks
   * Deposit tokens into a Vault (ERC-4626 Standard) to earn passive yield.
   *
   * Each vault accepts one unique token that can be deposited.
   *                     <Info>
   *                     **Required Allowances**
   *
   *                         In order to make this transaction, token allowances need to be set for the following contracts.
   *
   *                      - `<vault_address>`
   *                     </Info>
   */
  async vaultsDeposit(
    request: components.VaultDepositRequest,
    options?: RequestOptions,
  ): Promise<components.TransactionResponse> {
    return unwrapAsync(erc4626VaultsVaultsDeposit(
      this,
      request,
      options,
    ));
  }

  /**
   * Withdraw from Vault
   *
   * @remarks
   * Withdraw deposited tokens from a Vault (ERC-4626 Standard).
   *
   * The passive yield earned on token deposits is represented by the increased value of
   * the shares received upon depositing tokens. Trade in these shares for the tokens you
   * deposited plus any accrued yield.
   */
  async vaultsWithdraw(
    request: components.VaultWithdrawRequest,
    options?: RequestOptions,
  ): Promise<components.TransactionResponse> {
    return unwrapAsync(erc4626VaultsVaultsWithdraw(
      this,
      request,
      options,
    ));
  }
}
