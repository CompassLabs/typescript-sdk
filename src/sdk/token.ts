/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tokenTokenBalance } from "../funcs/tokenTokenBalance.js";
import { tokenTokenPrice } from "../funcs/tokenTokenPrice.js";
import { tokenTokenTransfer } from "../funcs/tokenTokenTransfer.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Token extends ClientSDK {
  /**
   * Token Price
   *
   * @remarks
   * Retrieves the price of a token in USD.
   */
  async tokenPrice(
    request: operations.V1TokenPriceRequest,
    options?: RequestOptions,
  ): Promise<components.TokenPriceResponse> {
    return unwrapAsync(tokenTokenPrice(
      this,
      request,
      options,
    ));
  }

  /**
   * Token Balance
   *
   * @remarks
   * Returns the balance of a specific ERC20 token for a given user address.
   */
  async tokenBalance(
    request: operations.V1TokenBalanceRequest,
    options?: RequestOptions,
  ): Promise<components.TokenBalanceResponse> {
    return unwrapAsync(tokenTokenBalance(
      this,
      request,
      options,
    ));
  }

  /**
   * Transfer Tokens
   *
   * @remarks
   * Sends native ETH or ERC20 tokens from the sender's address to another address.
   */
  async tokenTransfer(
    request: components.TokenTransferRequest,
    options?: RequestOptions,
  ): Promise<components.TransactionResponse> {
    return unwrapAsync(tokenTokenTransfer(
      this,
      request,
      options,
    ));
  }
}
