/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { aerodromeSlipstreamAerodromeSlipstreamLiquidityProvisionPositions } from "../../funcs/aerodromeSlipstreamAerodromeSlipstreamLiquidityProvisionPositions.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$inboundSchema,
};

export const tool$aerodromeSlipstreamAerodromeSlipstreamLiquidityProvisionPositions:
  ToolDefinition<typeof args> = {
    name:
      "aerodrome-slipstream-aerodrome-slipstream-liquidity-provision-positions",
    description: `List LP Positions

Retrieve the total number of Liquidity Provider (LP) positions associated with a
specific sender.

This endpoint allows users to query and obtain detailed information about their LP
positions, including the number of active positions they hold. The response model,
AerodromeLPPositionsInfo, provides a structured representation of the LP positions
data, ensuring clarity and ease of use. This functionality is essential for users
managing their liquidity provision activities, enabling them to make informed
decisions based on their current positions.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await aerodromeSlipstreamAerodromeSlipstreamLiquidityProvisionPositions(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
