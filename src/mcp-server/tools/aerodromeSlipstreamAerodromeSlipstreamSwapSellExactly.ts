/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { aerodromeSlipstreamAerodromeSlipstreamSwapSellExactly } from "../../funcs/aerodromeSlipstreamAerodromeSlipstreamSwapSellExactly.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.AerodromeSlipstreamSellExactlyRequest$inboundSchema,
};

export const tool$aerodromeSlipstreamAerodromeSlipstreamSwapSellExactly:
  ToolDefinition<typeof args> = {
    name: "aerodrome-slipstream-aerodrome-slipstream-swap-sell-exactly",
    description: `Swap - from Specified Amount

This endpoint allows users to trade a specific amount of one token into another
token using the Aerodrome Slipstream protocol.

The transaction is executed by specifying the exact amount of the input token to be
sold, and the system calculates the amount of the output token that will be
received. The operation ensures that the trade is conducted within the constraints
of the current market conditions, taking into account the liquidity and price
impact. This endpoint is suitable for users who want to sell a precise quantity of a
token and are willing to accept the resulting amount of the other token.
                    <Info>
                    **Required Allowances**

                        In order to make this transaction, token allowances need to be set for the following contracts.

                     - \`AerodromeSlipstreamRouter\`
                    </Info>
                `,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await aerodromeSlipstreamAerodromeSlipstreamSwapSellExactly(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
