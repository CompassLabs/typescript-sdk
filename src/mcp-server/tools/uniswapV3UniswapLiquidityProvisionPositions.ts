/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { uniswapV3UniswapLiquidityProvisionPositions } from "../../funcs/uniswapV3UniswapLiquidityProvisionPositions.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.V1UniswapLiquidityProvisionPositionsRequest$inboundSchema,
};

export const tool$uniswapV3UniswapLiquidityProvisionPositions: ToolDefinition<
  typeof args
> = {
  name: "uniswap-v3-uniswap-liquidity-provision-positions",
  description: `List LP

This endpoint retrieves the number of Liquidity Provider (LP) positions
associated with a specific sender address on the Uniswap platform.

Users can query this endpoint to obtain detailed information about their LP
positions, including the total number of positions and relevant metadata. This
information is crucial for users to manage and analyze their liquidity provision
activities effectively.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await uniswapV3UniswapLiquidityProvisionPositions(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
