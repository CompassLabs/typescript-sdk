/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ethenaEthenaUnstake } from "../../funcs/ethenaEthenaUnstake.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.EthenaUnstakeRequest$inboundSchema,
};

export const tool$ethenaEthenaUnstake: ToolDefinition<typeof args> = {
  name: "ethena-ethena-unstake",
  description: `Unstake USDe

Unstake deposited USDe from Ethena's vault.

Verify that the USDe being unstaked has completed its mandatory cooldown period
using the Ethena 'Get Vault & User Position' endpoint.

This is an all or nothing action. All of the USDe that has completed its cooldown
period must be withdrawn.

The passive yield earned on USDe deposits is represented by the increased value of
the shares received (sUSDe) upon depositing USDe. Trade in these shares in exchange
for the intial USDe deposited and any accrued yield since depositing.

An allowance does not have to be set to unstake USDe that has completed its cooldown
period.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await ethenaEthenaUnstake(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
