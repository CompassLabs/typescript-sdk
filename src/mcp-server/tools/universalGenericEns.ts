/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { universalGenericEns } from "../../funcs/universalGenericEns.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.V1GenericEnsRequest$inboundSchema,
};

export const tool$universalGenericEns: ToolDefinition<typeof args> = {
  name: "universal-generic-ens",
  description: `Resolve ENS

An ENS name is a string ending in \`.eth\`.

E.g. \`vitalik.eth\`. This endpoint can be used to
query the actual ethereum wallet address behind the ENS name.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await universalGenericEns(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
