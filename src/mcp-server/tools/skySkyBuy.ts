/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { skySkyBuy } from "../../funcs/skySkyBuy.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.SkyBuyRequest$inboundSchema,
};

export const tool$skySkyBuy: ToolDefinition<typeof args> = {
  name: "sky-sky-buy",
  description: `Buy USDS

Buy USDS with DAI or USDC on a 1:1 basis. There are no fees.

If buying with DAI, user will need to set an allowance on the DAI contract for the
'SkyDaiUsdsConverter' contract beforehand.

If buying with USDC, user will need to set an allowance on the USDC contract for the
'SkyUsdcUsdsConverter' contract beforehand.
                    <Info>
                    **Required Allowances**

                        In order to make this transaction, token allowances need to be set for the following contracts.

                     - \`SkyUsdcUsdsConverter\`
 - \`SkyDaiUsdsConverter\`
                    </Info>
                `,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await skySkyBuy(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
