/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { uniswapV3UniswapLiquidityProvisionIncrease } from "../../funcs/uniswapV3UniswapLiquidityProvisionIncrease.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.UniswapIncreaseLiquidityProvisionRequest$inboundSchema,
};

export const tool$uniswapV3UniswapLiquidityProvisionIncrease: ToolDefinition<
  typeof args
> = {
  name: "uniswap-v3-uniswap-liquidity-provision-increase",
  description: `Increase an LP position

This endpoint allows users to increase their existing Liquidity Provider (LP)
positions on the Uniswap platform.

By providing the necessary parameters, users can add more liquidity to their current
positions, thereby increasing their stake in the liquidity pool. This operation is
beneficial for users who wish to enhance their potential earnings from trading fees
within the pool. The endpoint requires details such as the token pair, additional
amount to be added, and any other parameters necessary for the liquidity increase
process.
                    <Info>
                    **Required Allowances**

                        In order to make this transaction, token allowances need to be set for the following contracts.

                     - \`AerodromeSlipstreamRouter\`
                    </Info>
                `,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await uniswapV3UniswapLiquidityProvisionIncrease(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
