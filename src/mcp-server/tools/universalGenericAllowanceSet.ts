/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { universalGenericAllowanceSet } from "../../funcs/universalGenericAllowanceSet.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.SetAllowanceRequest$inboundSchema,
};

export const tool$universalGenericAllowanceSet: ToolDefinition<typeof args> = {
  name: "universal-generic-allowance-set",
  description: `Set Allowance

This endpoint allows users to modify the token allowance on any ERC-20 token for
a specific protocol.

In decentralized finance (DeFi), setting an allowance is a necessary step to
authorize a protocol to spend a specified amount of tokens on behalf of the user.
This operation is crucial for ensuring that the protocol can manage the user's
tokens securely and efficiently, enabling seamless transactions and operations
within the DeFi ecosystem.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await universalGenericAllowanceSet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
