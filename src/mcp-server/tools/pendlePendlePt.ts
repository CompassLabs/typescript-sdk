/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { pendlePendlePt } from "../../funcs/pendlePendlePt.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.PendleTradePtRequest$inboundSchema,
};

export const tool$pendlePendlePt: ToolDefinition<typeof args> = {
  name: "pendle-pendle-pt",
  description: `Trade Principal Token (PT)

Trade market's Principal Token (PT) for fixed yield.

PT is traded with a token of the user's choice.

A sufficient allowance for the Pendle Router on the appropriate token contract must be set
beforehand. For \`action\` set to \`BUY\`, this is the \`token\` contract. For \`action\` set to \`SELL\`, this is the PT contract.
                    <Info>
                    **Required Allowances**

                        In order to make this transaction, token allowances need to be set for the following contracts.

                     - \`PendleRouter\`
                    </Info>
                `,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await pendlePendlePt(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
