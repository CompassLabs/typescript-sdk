/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { morphoMorphoWithdraw } from "../../funcs/morphoMorphoWithdraw.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.MorphoWithdrawRequest$inboundSchema,
};

export const tool$morphoMorphoWithdraw: ToolDefinition<typeof args> = {
  name: "morpho-morpho-withdraw",
  description: `Withdraw from Vault

Withdraw deposited tokens from a Morpho Vault.

The passive yield earned on token deposits is represented by the increased value of
the shares received upon depositing tokens.

A Morpho Vault has one loan asset and can allocate deposits to multiple Morpho
markets. Users can deposit into a vault to start earning passive yield from interest
paid by borrowers. Vaults feature automated risk management, actively curating risk
exposure for all deposited assets so users don't need to make these decisions
themselves. Users maintain full control over their assets, can monitor the vault's
state at any time, and withdraw their liquidity at their discretion.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await morphoMorphoWithdraw(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
