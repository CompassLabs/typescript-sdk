/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { uniswapV3UniswapLiquidityProvisionMint } from "../../funcs/uniswapV3UniswapLiquidityProvisionMint.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.UniswapMintLiquidityProvisionRequest$inboundSchema,
};

export const tool$uniswapV3UniswapLiquidityProvisionMint: ToolDefinition<
  typeof args
> = {
  name: "uniswap-v3-uniswap-liquidity-provision-mint",
  description: `Open a new LP position

This endpoint allows users to open a new Liquidity Provider (LP) position on the
Uniswap platform.

By providing the necessary parameters, users can initiate a minting process to
create a new LP token, which represents their stake in a specific liquidity pool.
This operation is essential for users looking to participate in liquidity provision,
enabling them to earn fees from trades that occur within the pool. The endpoint
requires details such as the token pair, amount, and any additional parameters
needed for the minting process.
                    <Info>
                    **Required Allowances**

                        In order to make this transaction, token allowances need to be set for the following contracts.

                     - \`UniswapV3NFTPositionManager\`
                    </Info>
                `,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await uniswapV3UniswapLiquidityProvisionMint(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
