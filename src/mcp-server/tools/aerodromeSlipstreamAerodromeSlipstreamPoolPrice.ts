/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { aerodromeSlipstreamAerodromeSlipstreamPoolPrice } from "../../funcs/aerodromeSlipstreamAerodromeSlipstreamPoolPrice.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.V1AerodromeSlipstreamPoolPriceRequest$inboundSchema,
};

export const tool$aerodromeSlipstreamAerodromeSlipstreamPoolPrice:
  ToolDefinition<typeof args> = {
    name: "aerodrome-slipstream-aerodrome-slipstream-pool-price",
    description: `Pool Price

This endpoint retrieves the current price of a pool, indicating how many token0
you can purchase for 1 token1.

Note that this is an instantaneous price and may change during any trade. For a more
accurate representation of the trade ratios between the two assets, consider using
the quote endpoint.`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] =
        await aerodromeSlipstreamAerodromeSlipstreamPoolPrice(
          client,
          args.request,
          { fetchOptions: { signal: ctx.signal } },
        ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
