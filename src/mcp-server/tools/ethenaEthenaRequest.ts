/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ethenaEthenaRequest } from "../../funcs/ethenaEthenaRequest.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.EthenaRequestToWithdrawRequest$inboundSchema,
};

export const tool$ethenaEthenaRequest: ToolDefinition<typeof args> = {
  name: "ethena-ethena-request",
  description: `Request to Withdraw USDe

Request to withdraw deposited USDe from Ethena's vault.

The Ethena vault requires a cooldown period. Once a request to withdraw a specified
amount of USDe has been submitted, the alloted cooldown period must pass before the
withdraw USDe transaction can be submitted.

If an additional amount of USDe is requested to be withdrawn anytime before
withdrawing the originally requested amount, the cooldown period restarts.

Yield is not earned on USDe while in its cooldown period.

An allowance does not have to be set to initiate the cooldown period.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await ethenaEthenaRequest(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
