/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { skySkySell } from "../../funcs/skySkySell.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.SkySellRequest$inboundSchema,
};

export const tool$skySkySell: ToolDefinition<typeof args> = {
  name: "sky-sky-sell",
  description: `Sell USDS

Sell USDS for DAI or USDC on a 1:1 basis. There are no fees.

If swapping to DAI, user will need to set an allowance on the USDS contract for the
'SkyDaiUsdsConverter' contract beforehand.

If swapping to USDC, user will need to set an allowance on the USDS contract for the
'SkyUsdcUsdsConverter' contract beforehand.
                    <Info>
                    **Required Allowances**

                        In order to make this transaction, token allowances need to be set for the following contracts.

                     - \`SkyUsdcUsdsConverter\`
 - \`SkyDaiUsdsConverter\`
                    </Info>
                `,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await skySkySell(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
