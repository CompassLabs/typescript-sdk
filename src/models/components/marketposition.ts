/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState,
  CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState$inboundSchema,
  CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState$Outbound,
  CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState$outboundSchema,
} from "./compassapibackendmodelsmorphoreadresponsecheckuserpositionmarketstate.js";
import {
  Market,
  Market$inboundSchema,
  Market$Outbound,
  Market$outboundSchema,
} from "./market.js";

export type MarketPosition = {
  market: Market;
  healthFactor: string | null;
  priceVariationToLiquidationPrice: string | null;
  state: CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState;
};

/** @internal */
export const MarketPosition$inboundSchema: z.ZodType<
  MarketPosition,
  z.ZodTypeDef,
  unknown
> = z.object({
  market: Market$inboundSchema,
  healthFactor: z.nullable(z.string()),
  priceVariationToLiquidationPrice: z.nullable(z.string()),
  state:
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState$inboundSchema,
});

/** @internal */
export type MarketPosition$Outbound = {
  market: Market$Outbound;
  healthFactor: string | null;
  priceVariationToLiquidationPrice: string | null;
  state:
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState$Outbound;
};

/** @internal */
export const MarketPosition$outboundSchema: z.ZodType<
  MarketPosition$Outbound,
  z.ZodTypeDef,
  MarketPosition
> = z.object({
  market: Market$outboundSchema,
  healthFactor: z.nullable(z.string()),
  priceVariationToLiquidationPrice: z.nullable(z.string()),
  state:
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionMarketState$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarketPosition$ {
  /** @deprecated use `MarketPosition$inboundSchema` instead. */
  export const inboundSchema = MarketPosition$inboundSchema;
  /** @deprecated use `MarketPosition$outboundSchema` instead. */
  export const outboundSchema = MarketPosition$outboundSchema;
  /** @deprecated use `MarketPosition$Outbound` instead. */
  export type Outbound = MarketPosition$Outbound;
}

export function marketPositionToJSON(marketPosition: MarketPosition): string {
  return JSON.stringify(MarketPosition$outboundSchema.parse(marketPosition));
}

export function marketPositionFromJSON(
  jsonString: string,
): SafeParseResult<MarketPosition, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MarketPosition$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MarketPosition' from JSON`,
  );
}
