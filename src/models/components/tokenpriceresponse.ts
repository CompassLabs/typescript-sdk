/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TokenPriceResponse = {
  /**
   * Price of the token in USD
   */
  price: string;
};

/** @internal */
export const TokenPriceResponse$inboundSchema: z.ZodType<
  TokenPriceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  price: z.string(),
});

/** @internal */
export type TokenPriceResponse$Outbound = {
  price: string;
};

/** @internal */
export const TokenPriceResponse$outboundSchema: z.ZodType<
  TokenPriceResponse$Outbound,
  z.ZodTypeDef,
  TokenPriceResponse
> = z.object({
  price: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenPriceResponse$ {
  /** @deprecated use `TokenPriceResponse$inboundSchema` instead. */
  export const inboundSchema = TokenPriceResponse$inboundSchema;
  /** @deprecated use `TokenPriceResponse$outboundSchema` instead. */
  export const outboundSchema = TokenPriceResponse$outboundSchema;
  /** @deprecated use `TokenPriceResponse$Outbound` instead. */
  export type Outbound = TokenPriceResponse$Outbound;
}

export function tokenPriceResponseToJSON(
  tokenPriceResponse: TokenPriceResponse,
): string {
  return JSON.stringify(
    TokenPriceResponse$outboundSchema.parse(tokenPriceResponse),
  );
}

export function tokenPriceResponseFromJSON(
  jsonString: string,
): SafeParseResult<TokenPriceResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TokenPriceResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TokenPriceResponse' from JSON`,
  );
}
