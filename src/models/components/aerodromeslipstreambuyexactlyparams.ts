/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The amount of the token to swap to
 */
export type AerodromeSlipstreamBuyExactlyParamsAmountOut = number | string;

/**
 * The maximum amount of the token to swap from
 */
export type AerodromeSlipstreamBuyExactlyParamsAmountInMaximum =
  | number
  | string;

/**
 * Parameters model for buying exactly an amount of tokens.
 */
export type AerodromeSlipstreamBuyExactlyParams = {
  actionType?: "AERODROME_SLIPSTREAM_BUY_EXACTLY" | undefined;
  /**
   * The symbol of the token to swap from.
   */
  tokenIn: string;
  /**
   * The symbol of the token to swap to.
   */
  tokenOut: string;
  /**
   * The tick spacing of the pool
   */
  tickSpacing: number;
  /**
   * The amount of the token to swap to
   */
  amountOut: number | string;
  /**
   * The maximum amount of the token to swap from
   */
  amountInMaximum: number | string;
};

/** @internal */
export const AerodromeSlipstreamBuyExactlyParamsAmountOut$inboundSchema:
  z.ZodType<
    AerodromeSlipstreamBuyExactlyParamsAmountOut,
    z.ZodTypeDef,
    unknown
  > = z.union([z.number(), z.string()]);

/** @internal */
export type AerodromeSlipstreamBuyExactlyParamsAmountOut$Outbound =
  | number
  | string;

/** @internal */
export const AerodromeSlipstreamBuyExactlyParamsAmountOut$outboundSchema:
  z.ZodType<
    AerodromeSlipstreamBuyExactlyParamsAmountOut$Outbound,
    z.ZodTypeDef,
    AerodromeSlipstreamBuyExactlyParamsAmountOut
  > = z.union([z.number(), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AerodromeSlipstreamBuyExactlyParamsAmountOut$ {
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParamsAmountOut$inboundSchema` instead. */
  export const inboundSchema =
    AerodromeSlipstreamBuyExactlyParamsAmountOut$inboundSchema;
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParamsAmountOut$outboundSchema` instead. */
  export const outboundSchema =
    AerodromeSlipstreamBuyExactlyParamsAmountOut$outboundSchema;
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParamsAmountOut$Outbound` instead. */
  export type Outbound = AerodromeSlipstreamBuyExactlyParamsAmountOut$Outbound;
}

export function aerodromeSlipstreamBuyExactlyParamsAmountOutToJSON(
  aerodromeSlipstreamBuyExactlyParamsAmountOut:
    AerodromeSlipstreamBuyExactlyParamsAmountOut,
): string {
  return JSON.stringify(
    AerodromeSlipstreamBuyExactlyParamsAmountOut$outboundSchema.parse(
      aerodromeSlipstreamBuyExactlyParamsAmountOut,
    ),
  );
}

export function aerodromeSlipstreamBuyExactlyParamsAmountOutFromJSON(
  jsonString: string,
): SafeParseResult<
  AerodromeSlipstreamBuyExactlyParamsAmountOut,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AerodromeSlipstreamBuyExactlyParamsAmountOut$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AerodromeSlipstreamBuyExactlyParamsAmountOut' from JSON`,
  );
}

/** @internal */
export const AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$inboundSchema:
  z.ZodType<
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum,
    z.ZodTypeDef,
    unknown
  > = z.union([z.number(), z.string()]);

/** @internal */
export type AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$Outbound =
  | number
  | string;

/** @internal */
export const AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$outboundSchema:
  z.ZodType<
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$Outbound,
    z.ZodTypeDef,
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum
  > = z.union([z.number(), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$ {
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$inboundSchema` instead. */
  export const inboundSchema =
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$inboundSchema;
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$outboundSchema` instead. */
  export const outboundSchema =
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$outboundSchema;
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$Outbound` instead. */
  export type Outbound =
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$Outbound;
}

export function aerodromeSlipstreamBuyExactlyParamsAmountInMaximumToJSON(
  aerodromeSlipstreamBuyExactlyParamsAmountInMaximum:
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum,
): string {
  return JSON.stringify(
    AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$outboundSchema.parse(
      aerodromeSlipstreamBuyExactlyParamsAmountInMaximum,
    ),
  );
}

export function aerodromeSlipstreamBuyExactlyParamsAmountInMaximumFromJSON(
  jsonString: string,
): SafeParseResult<
  AerodromeSlipstreamBuyExactlyParamsAmountInMaximum,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AerodromeSlipstreamBuyExactlyParamsAmountInMaximum$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AerodromeSlipstreamBuyExactlyParamsAmountInMaximum' from JSON`,
  );
}

/** @internal */
export const AerodromeSlipstreamBuyExactlyParams$inboundSchema: z.ZodType<
  AerodromeSlipstreamBuyExactlyParams,
  z.ZodTypeDef,
  unknown
> = z.object({
  action_type: z.literal("AERODROME_SLIPSTREAM_BUY_EXACTLY").default(
    "AERODROME_SLIPSTREAM_BUY_EXACTLY",
  ),
  token_in: z.string(),
  token_out: z.string(),
  tick_spacing: z.number().int(),
  amount_out: z.union([z.number(), z.string()]),
  amount_in_maximum: z.union([z.number(), z.string()]),
}).transform((v) => {
  return remap$(v, {
    "action_type": "actionType",
    "token_in": "tokenIn",
    "token_out": "tokenOut",
    "tick_spacing": "tickSpacing",
    "amount_out": "amountOut",
    "amount_in_maximum": "amountInMaximum",
  });
});

/** @internal */
export type AerodromeSlipstreamBuyExactlyParams$Outbound = {
  action_type: "AERODROME_SLIPSTREAM_BUY_EXACTLY";
  token_in: string;
  token_out: string;
  tick_spacing: number;
  amount_out: number | string;
  amount_in_maximum: number | string;
};

/** @internal */
export const AerodromeSlipstreamBuyExactlyParams$outboundSchema: z.ZodType<
  AerodromeSlipstreamBuyExactlyParams$Outbound,
  z.ZodTypeDef,
  AerodromeSlipstreamBuyExactlyParams
> = z.object({
  actionType: z.literal("AERODROME_SLIPSTREAM_BUY_EXACTLY").default(
    "AERODROME_SLIPSTREAM_BUY_EXACTLY" as const,
  ),
  tokenIn: z.string(),
  tokenOut: z.string(),
  tickSpacing: z.number().int(),
  amountOut: z.union([z.number(), z.string()]),
  amountInMaximum: z.union([z.number(), z.string()]),
}).transform((v) => {
  return remap$(v, {
    actionType: "action_type",
    tokenIn: "token_in",
    tokenOut: "token_out",
    tickSpacing: "tick_spacing",
    amountOut: "amount_out",
    amountInMaximum: "amount_in_maximum",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AerodromeSlipstreamBuyExactlyParams$ {
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParams$inboundSchema` instead. */
  export const inboundSchema =
    AerodromeSlipstreamBuyExactlyParams$inboundSchema;
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParams$outboundSchema` instead. */
  export const outboundSchema =
    AerodromeSlipstreamBuyExactlyParams$outboundSchema;
  /** @deprecated use `AerodromeSlipstreamBuyExactlyParams$Outbound` instead. */
  export type Outbound = AerodromeSlipstreamBuyExactlyParams$Outbound;
}

export function aerodromeSlipstreamBuyExactlyParamsToJSON(
  aerodromeSlipstreamBuyExactlyParams: AerodromeSlipstreamBuyExactlyParams,
): string {
  return JSON.stringify(
    AerodromeSlipstreamBuyExactlyParams$outboundSchema.parse(
      aerodromeSlipstreamBuyExactlyParams,
    ),
  );
}

export function aerodromeSlipstreamBuyExactlyParamsFromJSON(
  jsonString: string,
): SafeParseResult<AerodromeSlipstreamBuyExactlyParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AerodromeSlipstreamBuyExactlyParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AerodromeSlipstreamBuyExactlyParams' from JSON`,
  );
}
