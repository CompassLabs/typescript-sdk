/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsMorphoReadResponseGetMarketsAsset = {
  address: string;
  symbol: string;
  name: string;
  decimals: number;
};

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset,
    z.ZodTypeDef,
    unknown
  > = z.object({
    address: z.string(),
    symbol: z.string(),
    name: z.string(),
    decimals: z.number().int(),
  });

/** @internal */
export type CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$Outbound =
  {
    address: string;
    symbol: string;
    name: string;
    decimals: number;
  };

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset
  > = z.object({
    address: z.string(),
    symbol: z.string(),
    name: z.string(),
    decimals: z.number().int(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$ {
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$Outbound;
}

export function compassApiBackendModelsMorphoReadResponseGetMarketsAssetToJSON(
  compassApiBackendModelsMorphoReadResponseGetMarketsAsset:
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset,
): string {
  return JSON.stringify(
    CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$outboundSchema
      .parse(compassApiBackendModelsMorphoReadResponseGetMarketsAsset),
  );
}

export function compassApiBackendModelsMorphoReadResponseGetMarketsAssetFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsMorphoReadResponseGetMarketsAsset,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsMorphoReadResponseGetMarketsAsset$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsMorphoReadResponseGetMarketsAsset' from JSON`,
  );
}
