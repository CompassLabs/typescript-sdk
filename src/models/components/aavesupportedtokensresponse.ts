/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AaveSupportedTokenMetadata,
  AaveSupportedTokenMetadata$inboundSchema,
  AaveSupportedTokenMetadata$Outbound,
  AaveSupportedTokenMetadata$outboundSchema,
} from "./aavesupportedtokenmetadata.js";

export type AaveSupportedTokensResponse = {
  /**
   * List of supported tokens with configuration metadata for a given chain.
   */
  tokens: Array<AaveSupportedTokenMetadata>;
};

/** @internal */
export const AaveSupportedTokensResponse$inboundSchema: z.ZodType<
  AaveSupportedTokensResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  tokens: z.array(AaveSupportedTokenMetadata$inboundSchema),
});

/** @internal */
export type AaveSupportedTokensResponse$Outbound = {
  tokens: Array<AaveSupportedTokenMetadata$Outbound>;
};

/** @internal */
export const AaveSupportedTokensResponse$outboundSchema: z.ZodType<
  AaveSupportedTokensResponse$Outbound,
  z.ZodTypeDef,
  AaveSupportedTokensResponse
> = z.object({
  tokens: z.array(AaveSupportedTokenMetadata$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AaveSupportedTokensResponse$ {
  /** @deprecated use `AaveSupportedTokensResponse$inboundSchema` instead. */
  export const inboundSchema = AaveSupportedTokensResponse$inboundSchema;
  /** @deprecated use `AaveSupportedTokensResponse$outboundSchema` instead. */
  export const outboundSchema = AaveSupportedTokensResponse$outboundSchema;
  /** @deprecated use `AaveSupportedTokensResponse$Outbound` instead. */
  export type Outbound = AaveSupportedTokensResponse$Outbound;
}

export function aaveSupportedTokensResponseToJSON(
  aaveSupportedTokensResponse: AaveSupportedTokensResponse,
): string {
  return JSON.stringify(
    AaveSupportedTokensResponse$outboundSchema.parse(
      aaveSupportedTokensResponse,
    ),
  );
}

export function aaveSupportedTokensResponseFromJSON(
  jsonString: string,
): SafeParseResult<AaveSupportedTokensResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AaveSupportedTokensResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AaveSupportedTokensResponse' from JSON`,
  );
}
