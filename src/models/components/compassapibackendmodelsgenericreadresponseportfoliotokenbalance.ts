/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance = {
  /**
   * Amount of tokens a particular address holds
   */
  amount: string;
  /**
   * Number of decimals of the token
   */
  decimals: number;
  /**
   * Symbol of the token.
   */
  tokenSymbol: string;
  /**
   * Address of the token
   */
  tokenAddress: string;
  /**
   * Price of the token in USD
   */
  price: string;
  /**
   * Value of the token balance in USD
   */
  tokenValueInUsd: string;
};

/** @internal */
export const CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance,
    z.ZodTypeDef,
    unknown
  > = z.object({
    amount: z.string(),
    decimals: z.number().int(),
    token_symbol: z.string(),
    token_address: z.string(),
    price: z.string(),
    token_value_in_usd: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "token_symbol": "tokenSymbol",
      "token_address": "tokenAddress",
      "token_value_in_usd": "tokenValueInUsd",
    });
  });

/** @internal */
export type CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$Outbound =
  {
    amount: string;
    decimals: number;
    token_symbol: string;
    token_address: string;
    price: string;
    token_value_in_usd: string;
  };

/** @internal */
export const CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance
  > = z.object({
    amount: z.string(),
    decimals: z.number().int(),
    tokenSymbol: z.string(),
    tokenAddress: z.string(),
    price: z.string(),
    tokenValueInUsd: z.string(),
  }).transform((v) => {
    return remap$(v, {
      tokenSymbol: "token_symbol",
      tokenAddress: "token_address",
      tokenValueInUsd: "token_value_in_usd",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$ {
  /** @deprecated use `CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$Outbound;
}

export function compassApiBackendModelsGenericReadResponsePortfolioTokenBalanceToJSON(
  compassApiBackendModelsGenericReadResponsePortfolioTokenBalance:
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance,
): string {
  return JSON.stringify(
    CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$outboundSchema
      .parse(compassApiBackendModelsGenericReadResponsePortfolioTokenBalance),
  );
}

export function compassApiBackendModelsGenericReadResponsePortfolioTokenBalanceFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsGenericReadResponsePortfolioTokenBalance' from JSON`,
  );
}
