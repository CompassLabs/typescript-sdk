/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PendleRedeemYieldParams = {
  actionType?: "PENDLE_REDEEM_YIELD" | undefined;
  /**
   * The address of the market identifying which Yield Token (YT) you would like to claim yield from.
   */
  marketAddress: string;
};

/** @internal */
export const PendleRedeemYieldParams$inboundSchema: z.ZodType<
  PendleRedeemYieldParams,
  z.ZodTypeDef,
  unknown
> = z.object({
  action_type: z.literal("PENDLE_REDEEM_YIELD").default("PENDLE_REDEEM_YIELD"),
  market_address: z.string(),
}).transform((v) => {
  return remap$(v, {
    "action_type": "actionType",
    "market_address": "marketAddress",
  });
});

/** @internal */
export type PendleRedeemYieldParams$Outbound = {
  action_type: "PENDLE_REDEEM_YIELD";
  market_address: string;
};

/** @internal */
export const PendleRedeemYieldParams$outboundSchema: z.ZodType<
  PendleRedeemYieldParams$Outbound,
  z.ZodTypeDef,
  PendleRedeemYieldParams
> = z.object({
  actionType: z.literal("PENDLE_REDEEM_YIELD").default(
    "PENDLE_REDEEM_YIELD" as const,
  ),
  marketAddress: z.string(),
}).transform((v) => {
  return remap$(v, {
    actionType: "action_type",
    marketAddress: "market_address",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PendleRedeemYieldParams$ {
  /** @deprecated use `PendleRedeemYieldParams$inboundSchema` instead. */
  export const inboundSchema = PendleRedeemYieldParams$inboundSchema;
  /** @deprecated use `PendleRedeemYieldParams$outboundSchema` instead. */
  export const outboundSchema = PendleRedeemYieldParams$outboundSchema;
  /** @deprecated use `PendleRedeemYieldParams$Outbound` instead. */
  export type Outbound = PendleRedeemYieldParams$Outbound;
}

export function pendleRedeemYieldParamsToJSON(
  pendleRedeemYieldParams: PendleRedeemYieldParams,
): string {
  return JSON.stringify(
    PendleRedeemYieldParams$outboundSchema.parse(pendleRedeemYieldParams),
  );
}

export function pendleRedeemYieldParamsFromJSON(
  jsonString: string,
): SafeParseResult<PendleRedeemYieldParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PendleRedeemYieldParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PendleRedeemYieldParams' from JSON`,
  );
}
