/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsMorphoReadResponseGetMarketMarketState = {
  utilization: string;
  collateralAssets?: string | null | undefined;
  collateralAssetsUsd?: string | null | undefined;
  borrowAssets: string;
  borrowAssetsUsd?: string | null | undefined;
  liquidityAssets: string;
  liquidityAssetsUsd?: string | null | undefined;
  totalLiquidity: string;
  totalLiquidityUsd?: string | null | undefined;
};

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState,
    z.ZodTypeDef,
    unknown
  > = z.object({
    utilization: z.string(),
    collateralAssets: z.nullable(z.string()).optional(),
    collateralAssetsUsd: z.nullable(z.string()).optional(),
    borrowAssets: z.string(),
    borrowAssetsUsd: z.nullable(z.string()).optional(),
    liquidityAssets: z.string(),
    liquidityAssetsUsd: z.nullable(z.string()).optional(),
    totalLiquidity: z.string(),
    totalLiquidityUsd: z.nullable(z.string()).optional(),
  });

/** @internal */
export type CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$Outbound =
  {
    utilization: string;
    collateralAssets?: string | null | undefined;
    collateralAssetsUsd?: string | null | undefined;
    borrowAssets: string;
    borrowAssetsUsd?: string | null | undefined;
    liquidityAssets: string;
    liquidityAssetsUsd?: string | null | undefined;
    totalLiquidity: string;
    totalLiquidityUsd?: string | null | undefined;
  };

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState
  > = z.object({
    utilization: z.string(),
    collateralAssets: z.nullable(z.string()).optional(),
    collateralAssetsUsd: z.nullable(z.string()).optional(),
    borrowAssets: z.string(),
    borrowAssetsUsd: z.nullable(z.string()).optional(),
    liquidityAssets: z.string(),
    liquidityAssetsUsd: z.nullable(z.string()).optional(),
    totalLiquidity: z.string(),
    totalLiquidityUsd: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$ {
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$Outbound;
}

export function compassApiBackendModelsMorphoReadResponseGetMarketMarketStateToJSON(
  compassApiBackendModelsMorphoReadResponseGetMarketMarketState:
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState,
): string {
  return JSON.stringify(
    CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$outboundSchema
      .parse(compassApiBackendModelsMorphoReadResponseGetMarketMarketState),
  );
}

export function compassApiBackendModelsMorphoReadResponseGetMarketMarketStateFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsMorphoReadResponseGetMarketMarketState,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsMorphoReadResponseGetMarketMarketState$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsMorphoReadResponseGetMarketMarketState' from JSON`,
  );
}
