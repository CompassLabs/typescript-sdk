/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  MorphoMarket,
  MorphoMarket$inboundSchema,
  MorphoMarket$Outbound,
  MorphoMarket$outboundSchema,
} from "./morphomarket.js";

export type MorphoGetMarketsResponse = {
  /**
   *  A list of markets matching the query.
   */
  markets: Array<MorphoMarket>;
};

/** @internal */
export const MorphoGetMarketsResponse$inboundSchema: z.ZodType<
  MorphoGetMarketsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  markets: z.array(MorphoMarket$inboundSchema),
});

/** @internal */
export type MorphoGetMarketsResponse$Outbound = {
  markets: Array<MorphoMarket$Outbound>;
};

/** @internal */
export const MorphoGetMarketsResponse$outboundSchema: z.ZodType<
  MorphoGetMarketsResponse$Outbound,
  z.ZodTypeDef,
  MorphoGetMarketsResponse
> = z.object({
  markets: z.array(MorphoMarket$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MorphoGetMarketsResponse$ {
  /** @deprecated use `MorphoGetMarketsResponse$inboundSchema` instead. */
  export const inboundSchema = MorphoGetMarketsResponse$inboundSchema;
  /** @deprecated use `MorphoGetMarketsResponse$outboundSchema` instead. */
  export const outboundSchema = MorphoGetMarketsResponse$outboundSchema;
  /** @deprecated use `MorphoGetMarketsResponse$Outbound` instead. */
  export type Outbound = MorphoGetMarketsResponse$Outbound;
}

export function morphoGetMarketsResponseToJSON(
  morphoGetMarketsResponse: MorphoGetMarketsResponse,
): string {
  return JSON.stringify(
    MorphoGetMarketsResponse$outboundSchema.parse(morphoGetMarketsResponse),
  );
}

export function morphoGetMarketsResponseFromJSON(
  jsonString: string,
): SafeParseResult<MorphoGetMarketsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MorphoGetMarketsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MorphoGetMarketsResponse' from JSON`,
  );
}
