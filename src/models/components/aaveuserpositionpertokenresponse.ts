/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AaveUserPositionPerTokenResponse = {
  /**
   * The balance of AAVE aTokens (interest-bearing representations of your deposits).
   */
  tokenBalance: string;
  /**
   * The amount of the user's debt with a fixed interest rate.
   */
  stableDebt: string;
  /**
   * The amount of the user's debt with a variable interest rate.
   */
  variableDebt: string;
  /**
   * The amount of the user's debt that was part of the initial principal of all
   *
   * @remarks
   *         loans with a stable interest rate.
   */
  principalStableDebt: string;
  /**
   * The amount of the user's debt that was part of the initial principal of all
   *
   * @remarks
   *         loans with a variable interest rate. This is the value stored by AAVE, which may be slightly
   *         inaccurate, but reflects what AAVE believes you initially paid.
   */
  principalVariableDebt: string;
  /**
   * The current average annualised interest rate for all your stable loans in
   *
   * @remarks
   *         this pool.
   */
  stableBorrowRate: string;
  /**
   * The annualised interest rate you would pay on a new stable loan.
   */
  stableBorrowRateForNewLoans: string;
  /**
   * The current annualised interest rate for variable rate loans in this pool.
   *
   * @remarks
   *         (This applies to both current and new loans.)
   */
  variableBorrowRate: string;
  /**
   * The annualised interest rate for deposited supplies.
   */
  liquidityRate: string;
};

/** @internal */
export const AaveUserPositionPerTokenResponse$inboundSchema: z.ZodType<
  AaveUserPositionPerTokenResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  token_balance: z.string(),
  stable_debt: z.string(),
  variable_debt: z.string(),
  principal_stable_debt: z.string(),
  principal_variable_debt: z.string(),
  stable_borrow_rate: z.string(),
  stable_borrow_rate_for_new_loans: z.string(),
  variable_borrow_rate: z.string(),
  liquidity_rate: z.string(),
}).transform((v) => {
  return remap$(v, {
    "token_balance": "tokenBalance",
    "stable_debt": "stableDebt",
    "variable_debt": "variableDebt",
    "principal_stable_debt": "principalStableDebt",
    "principal_variable_debt": "principalVariableDebt",
    "stable_borrow_rate": "stableBorrowRate",
    "stable_borrow_rate_for_new_loans": "stableBorrowRateForNewLoans",
    "variable_borrow_rate": "variableBorrowRate",
    "liquidity_rate": "liquidityRate",
  });
});

/** @internal */
export type AaveUserPositionPerTokenResponse$Outbound = {
  token_balance: string;
  stable_debt: string;
  variable_debt: string;
  principal_stable_debt: string;
  principal_variable_debt: string;
  stable_borrow_rate: string;
  stable_borrow_rate_for_new_loans: string;
  variable_borrow_rate: string;
  liquidity_rate: string;
};

/** @internal */
export const AaveUserPositionPerTokenResponse$outboundSchema: z.ZodType<
  AaveUserPositionPerTokenResponse$Outbound,
  z.ZodTypeDef,
  AaveUserPositionPerTokenResponse
> = z.object({
  tokenBalance: z.string(),
  stableDebt: z.string(),
  variableDebt: z.string(),
  principalStableDebt: z.string(),
  principalVariableDebt: z.string(),
  stableBorrowRate: z.string(),
  stableBorrowRateForNewLoans: z.string(),
  variableBorrowRate: z.string(),
  liquidityRate: z.string(),
}).transform((v) => {
  return remap$(v, {
    tokenBalance: "token_balance",
    stableDebt: "stable_debt",
    variableDebt: "variable_debt",
    principalStableDebt: "principal_stable_debt",
    principalVariableDebt: "principal_variable_debt",
    stableBorrowRate: "stable_borrow_rate",
    stableBorrowRateForNewLoans: "stable_borrow_rate_for_new_loans",
    variableBorrowRate: "variable_borrow_rate",
    liquidityRate: "liquidity_rate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AaveUserPositionPerTokenResponse$ {
  /** @deprecated use `AaveUserPositionPerTokenResponse$inboundSchema` instead. */
  export const inboundSchema = AaveUserPositionPerTokenResponse$inboundSchema;
  /** @deprecated use `AaveUserPositionPerTokenResponse$outboundSchema` instead. */
  export const outboundSchema = AaveUserPositionPerTokenResponse$outboundSchema;
  /** @deprecated use `AaveUserPositionPerTokenResponse$Outbound` instead. */
  export type Outbound = AaveUserPositionPerTokenResponse$Outbound;
}

export function aaveUserPositionPerTokenResponseToJSON(
  aaveUserPositionPerTokenResponse: AaveUserPositionPerTokenResponse,
): string {
  return JSON.stringify(
    AaveUserPositionPerTokenResponse$outboundSchema.parse(
      aaveUserPositionPerTokenResponse,
    ),
  );
}

export function aaveUserPositionPerTokenResponseFromJSON(
  jsonString: string,
): SafeParseResult<AaveUserPositionPerTokenResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AaveUserPositionPerTokenResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AaveUserPositionPerTokenResponse' from JSON`,
  );
}
