/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData =
  {
    apy: string;
    netApy: string;
  };

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    apy: z.string(),
    netApy: z.string(),
  });

/** @internal */
export type CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$Outbound =
  {
    apy: string;
    netApy: string;
  };

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData
  > = z.object({
    apy: z.string(),
    netApy: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$ {
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$Outbound;
}

export function compassApiBackendModelsMorphoReadResponseCheckUserPositionApyDataToJSON(
  compassApiBackendModelsMorphoReadResponseCheckUserPositionApyData:
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData,
): string {
  return JSON.stringify(
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$outboundSchema
      .parse(compassApiBackendModelsMorphoReadResponseCheckUserPositionApyData),
  );
}

export function compassApiBackendModelsMorphoReadResponseCheckUserPositionApyDataFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsMorphoReadResponseCheckUserPositionApyData' from JSON`,
  );
}
