/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UnsignedMulticallTransaction,
  UnsignedMulticallTransaction$inboundSchema,
  UnsignedMulticallTransaction$Outbound,
  UnsignedMulticallTransaction$outboundSchema,
} from "./unsignedmulticalltransaction.js";

export type BundlerTransactionResponse = {
  transaction: UnsignedMulticallTransaction;
};

/** @internal */
export const BundlerTransactionResponse$inboundSchema: z.ZodType<
  BundlerTransactionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  transaction: UnsignedMulticallTransaction$inboundSchema,
});

/** @internal */
export type BundlerTransactionResponse$Outbound = {
  transaction: UnsignedMulticallTransaction$Outbound;
};

/** @internal */
export const BundlerTransactionResponse$outboundSchema: z.ZodType<
  BundlerTransactionResponse$Outbound,
  z.ZodTypeDef,
  BundlerTransactionResponse
> = z.object({
  transaction: UnsignedMulticallTransaction$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BundlerTransactionResponse$ {
  /** @deprecated use `BundlerTransactionResponse$inboundSchema` instead. */
  export const inboundSchema = BundlerTransactionResponse$inboundSchema;
  /** @deprecated use `BundlerTransactionResponse$outboundSchema` instead. */
  export const outboundSchema = BundlerTransactionResponse$outboundSchema;
  /** @deprecated use `BundlerTransactionResponse$Outbound` instead. */
  export type Outbound = BundlerTransactionResponse$Outbound;
}

export function bundlerTransactionResponseToJSON(
  bundlerTransactionResponse: BundlerTransactionResponse,
): string {
  return JSON.stringify(
    BundlerTransactionResponse$outboundSchema.parse(bundlerTransactionResponse),
  );
}

export function bundlerTransactionResponseFromJSON(
  jsonString: string,
): SafeParseResult<BundlerTransactionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BundlerTransactionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BundlerTransactionResponse' from JSON`,
  );
}
