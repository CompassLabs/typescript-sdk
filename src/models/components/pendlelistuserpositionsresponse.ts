/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Position,
  Position$inboundSchema,
  Position$Outbound,
  Position$outboundSchema,
} from "./position.js";

export type PendleListUserPositionsResponse = {
  /**
   * A list of the user's positions on the given chain.
   */
  positions: Array<Position>;
};

/** @internal */
export const PendleListUserPositionsResponse$inboundSchema: z.ZodType<
  PendleListUserPositionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  positions: z.array(Position$inboundSchema),
});

/** @internal */
export type PendleListUserPositionsResponse$Outbound = {
  positions: Array<Position$Outbound>;
};

/** @internal */
export const PendleListUserPositionsResponse$outboundSchema: z.ZodType<
  PendleListUserPositionsResponse$Outbound,
  z.ZodTypeDef,
  PendleListUserPositionsResponse
> = z.object({
  positions: z.array(Position$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PendleListUserPositionsResponse$ {
  /** @deprecated use `PendleListUserPositionsResponse$inboundSchema` instead. */
  export const inboundSchema = PendleListUserPositionsResponse$inboundSchema;
  /** @deprecated use `PendleListUserPositionsResponse$outboundSchema` instead. */
  export const outboundSchema = PendleListUserPositionsResponse$outboundSchema;
  /** @deprecated use `PendleListUserPositionsResponse$Outbound` instead. */
  export type Outbound = PendleListUserPositionsResponse$Outbound;
}

export function pendleListUserPositionsResponseToJSON(
  pendleListUserPositionsResponse: PendleListUserPositionsResponse,
): string {
  return JSON.stringify(
    PendleListUserPositionsResponse$outboundSchema.parse(
      pendleListUserPositionsResponse,
    ),
  );
}

export function pendleListUserPositionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<PendleListUserPositionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PendleListUserPositionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PendleListUserPositionsResponse' from JSON`,
  );
}
