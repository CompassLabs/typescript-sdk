/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsVaultsReadResponseVaultUserPosition = {
  /**
   * The number of vault share tokens representing the user’s proportional ownership of the assets in the vault.
   */
  amountOfShares: string;
  /**
   * The equivalent value of the user’s vault shares, denominated in the vault’s underlying asset (deposit token).
   */
  amountInUnderlyingToken: string;
};

/** @internal */
export const CompassApiBackendModelsVaultsReadResponseVaultUserPosition$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition,
    z.ZodTypeDef,
    unknown
  > = z.object({
    amount_of_shares: z.string(),
    amount_in_underlying_token: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "amount_of_shares": "amountOfShares",
      "amount_in_underlying_token": "amountInUnderlyingToken",
    });
  });

/** @internal */
export type CompassApiBackendModelsVaultsReadResponseVaultUserPosition$Outbound =
  {
    amount_of_shares: string;
    amount_in_underlying_token: string;
  };

/** @internal */
export const CompassApiBackendModelsVaultsReadResponseVaultUserPosition$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition
  > = z.object({
    amountOfShares: z.string(),
    amountInUnderlyingToken: z.string(),
  }).transform((v) => {
    return remap$(v, {
      amountOfShares: "amount_of_shares",
      amountInUnderlyingToken: "amount_in_underlying_token",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsVaultsReadResponseVaultUserPosition$ {
  /** @deprecated use `CompassApiBackendModelsVaultsReadResponseVaultUserPosition$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsVaultsReadResponseVaultUserPosition$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsVaultsReadResponseVaultUserPosition$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition$Outbound;
}

export function compassApiBackendModelsVaultsReadResponseVaultUserPositionToJSON(
  compassApiBackendModelsVaultsReadResponseVaultUserPosition:
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition,
): string {
  return JSON.stringify(
    CompassApiBackendModelsVaultsReadResponseVaultUserPosition$outboundSchema
      .parse(compassApiBackendModelsVaultsReadResponseVaultUserPosition),
  );
}

export function compassApiBackendModelsVaultsReadResponseVaultUserPositionFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsVaultsReadResponseVaultUserPosition,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsVaultsReadResponseVaultUserPosition$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsVaultsReadResponseVaultUserPosition' from JSON`,
  );
}
