/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState = {
  id: string;
  apy: number;
  netApy: number;
  totalAssets: number;
  totalAssetsUsd?: number | null | undefined;
  fee: number;
  timelock: number;
};

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    apy: z.number(),
    netApy: z.number(),
    totalAssets: z.number().int(),
    totalAssetsUsd: z.nullable(z.number()).optional(),
    fee: z.number(),
    timelock: z.number().int(),
  });

/** @internal */
export type CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$Outbound =
  {
    id: string;
    apy: number;
    netApy: number;
    totalAssets: number;
    totalAssetsUsd?: number | null | undefined;
    fee: number;
    timelock: number;
  };

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState
  > = z.object({
    id: z.string(),
    apy: z.number(),
    netApy: z.number(),
    totalAssets: z.number().int(),
    totalAssetsUsd: z.nullable(z.number()).optional(),
    fee: z.number(),
    timelock: z.number().int(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$ {
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$Outbound;
}

export function compassApiBackendModelsMorphoReadResponseGetVaultsVaultStateToJSON(
  compassApiBackendModelsMorphoReadResponseGetVaultsVaultState:
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState,
): string {
  return JSON.stringify(
    CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$outboundSchema
      .parse(compassApiBackendModelsMorphoReadResponseGetVaultsVaultState),
  );
}

export function compassApiBackendModelsMorphoReadResponseGetVaultsVaultStateFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsMorphoReadResponseGetVaultsVaultState' from JSON`,
  );
}
