/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsPendleReadResponsePositionsTokenBalance = {
  valuation: number;
  balance: string;
};

/** @internal */
export const CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance,
    z.ZodTypeDef,
    unknown
  > = z.object({
    valuation: z.number(),
    balance: z.string(),
  });

/** @internal */
export type CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$Outbound =
  {
    valuation: number;
    balance: string;
  };

/** @internal */
export const CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance
  > = z.object({
    valuation: z.number(),
    balance: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$ {
  /** @deprecated use `CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$Outbound;
}

export function compassApiBackendModelsPendleReadResponsePositionsTokenBalanceToJSON(
  compassApiBackendModelsPendleReadResponsePositionsTokenBalance:
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance,
): string {
  return JSON.stringify(
    CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$outboundSchema
      .parse(compassApiBackendModelsPendleReadResponsePositionsTokenBalance),
  );
}

export function compassApiBackendModelsPendleReadResponsePositionsTokenBalanceFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsPendleReadResponsePositionsTokenBalance,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsPendleReadResponsePositionsTokenBalance$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsPendleReadResponsePositionsTokenBalance' from JSON`,
  );
}
