/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState =
  {
    pnlUsd: string;
    assets: string;
    assetsUsd: string;
    shares: string;
  };

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$inboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState,
    z.ZodTypeDef,
    unknown
  > = z.object({
    pnlUsd: z.string(),
    assets: z.string(),
    assetsUsd: z.string(),
    shares: z.string(),
  });

/** @internal */
export type CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$Outbound =
  {
    pnlUsd: string;
    assets: string;
    assetsUsd: string;
    shares: string;
  };

/** @internal */
export const CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$outboundSchema:
  z.ZodType<
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$Outbound,
    z.ZodTypeDef,
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState
  > = z.object({
    pnlUsd: z.string(),
    assets: z.string(),
    assetsUsd: z.string(),
    shares: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$ {
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$inboundSchema` instead. */
  export const inboundSchema =
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$inboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$outboundSchema` instead. */
  export const outboundSchema =
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$outboundSchema;
  /** @deprecated use `CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$Outbound` instead. */
  export type Outbound =
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$Outbound;
}

export function compassApiBackendModelsMorphoReadResponseCheckUserPositionVaultStateToJSON(
  compassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState:
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState,
): string {
  return JSON.stringify(
    CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$outboundSchema
      .parse(
        compassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState,
      ),
  );
}

export function compassApiBackendModelsMorphoReadResponseCheckUserPositionVaultStateFromJSON(
  jsonString: string,
): SafeParseResult<
  CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CompassApiBackendModelsMorphoReadResponseCheckUserPositionVaultState' from JSON`,
  );
}
