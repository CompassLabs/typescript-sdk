/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Movement10Percent = {
  ptMovementUpUsd?: number | null | undefined;
  ptMovementDownUsd?: number | null | undefined;
  ytMovementUpUsd?: number | null | undefined;
  ytMovementDownUsd?: number | null | undefined;
};

/** @internal */
export const Movement10Percent$inboundSchema: z.ZodType<
  Movement10Percent,
  z.ZodTypeDef,
  unknown
> = z.object({
  ptMovementUpUsd: z.nullable(z.number()).optional(),
  ptMovementDownUsd: z.nullable(z.number()).optional(),
  ytMovementUpUsd: z.nullable(z.number()).optional(),
  ytMovementDownUsd: z.nullable(z.number()).optional(),
});

/** @internal */
export type Movement10Percent$Outbound = {
  ptMovementUpUsd?: number | null | undefined;
  ptMovementDownUsd?: number | null | undefined;
  ytMovementUpUsd?: number | null | undefined;
  ytMovementDownUsd?: number | null | undefined;
};

/** @internal */
export const Movement10Percent$outboundSchema: z.ZodType<
  Movement10Percent$Outbound,
  z.ZodTypeDef,
  Movement10Percent
> = z.object({
  ptMovementUpUsd: z.nullable(z.number()).optional(),
  ptMovementDownUsd: z.nullable(z.number()).optional(),
  ytMovementUpUsd: z.nullable(z.number()).optional(),
  ytMovementDownUsd: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Movement10Percent$ {
  /** @deprecated use `Movement10Percent$inboundSchema` instead. */
  export const inboundSchema = Movement10Percent$inboundSchema;
  /** @deprecated use `Movement10Percent$outboundSchema` instead. */
  export const outboundSchema = Movement10Percent$outboundSchema;
  /** @deprecated use `Movement10Percent$Outbound` instead. */
  export type Outbound = Movement10Percent$Outbound;
}

export function movement10PercentToJSON(
  movement10Percent: Movement10Percent,
): string {
  return JSON.stringify(
    Movement10Percent$outboundSchema.parse(movement10Percent),
  );
}

export function movement10PercentFromJSON(
  jsonString: string,
): SafeParseResult<Movement10Percent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Movement10Percent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Movement10Percent' from JSON`,
  );
}
