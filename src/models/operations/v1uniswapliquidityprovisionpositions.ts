/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const V1UniswapLiquidityProvisionPositionsChain = {
  Arbitrum: "arbitrum",
  Base: "base",
  Ethereum: "ethereum",
} as const;
export type V1UniswapLiquidityProvisionPositionsChain = ClosedEnum<
  typeof V1UniswapLiquidityProvisionPositionsChain
>;

export type V1UniswapLiquidityProvisionPositionsRequest = {
  chain?: V1UniswapLiquidityProvisionPositionsChain | undefined;
  /**
   * The user to get positions for.
   */
  user?: string | undefined;
};

/** @internal */
export const V1UniswapLiquidityProvisionPositionsChain$inboundSchema:
  z.ZodNativeEnum<typeof V1UniswapLiquidityProvisionPositionsChain> = z
    .nativeEnum(V1UniswapLiquidityProvisionPositionsChain);

/** @internal */
export const V1UniswapLiquidityProvisionPositionsChain$outboundSchema:
  z.ZodNativeEnum<typeof V1UniswapLiquidityProvisionPositionsChain> =
    V1UniswapLiquidityProvisionPositionsChain$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1UniswapLiquidityProvisionPositionsChain$ {
  /** @deprecated use `V1UniswapLiquidityProvisionPositionsChain$inboundSchema` instead. */
  export const inboundSchema =
    V1UniswapLiquidityProvisionPositionsChain$inboundSchema;
  /** @deprecated use `V1UniswapLiquidityProvisionPositionsChain$outboundSchema` instead. */
  export const outboundSchema =
    V1UniswapLiquidityProvisionPositionsChain$outboundSchema;
}

/** @internal */
export const V1UniswapLiquidityProvisionPositionsRequest$inboundSchema:
  z.ZodType<
    V1UniswapLiquidityProvisionPositionsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    chain: V1UniswapLiquidityProvisionPositionsChain$inboundSchema.default(
      "arbitrum",
    ),
    user: z.string().default("0x29F20a192328eF1aD35e1564aBFf4Be9C5ce5f7B"),
  });

/** @internal */
export type V1UniswapLiquidityProvisionPositionsRequest$Outbound = {
  chain: string;
  user: string;
};

/** @internal */
export const V1UniswapLiquidityProvisionPositionsRequest$outboundSchema:
  z.ZodType<
    V1UniswapLiquidityProvisionPositionsRequest$Outbound,
    z.ZodTypeDef,
    V1UniswapLiquidityProvisionPositionsRequest
  > = z.object({
    chain: V1UniswapLiquidityProvisionPositionsChain$outboundSchema.default(
      "arbitrum",
    ),
    user: z.string().default("0x29F20a192328eF1aD35e1564aBFf4Be9C5ce5f7B"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1UniswapLiquidityProvisionPositionsRequest$ {
  /** @deprecated use `V1UniswapLiquidityProvisionPositionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    V1UniswapLiquidityProvisionPositionsRequest$inboundSchema;
  /** @deprecated use `V1UniswapLiquidityProvisionPositionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    V1UniswapLiquidityProvisionPositionsRequest$outboundSchema;
  /** @deprecated use `V1UniswapLiquidityProvisionPositionsRequest$Outbound` instead. */
  export type Outbound = V1UniswapLiquidityProvisionPositionsRequest$Outbound;
}

export function v1UniswapLiquidityProvisionPositionsRequestToJSON(
  v1UniswapLiquidityProvisionPositionsRequest:
    V1UniswapLiquidityProvisionPositionsRequest,
): string {
  return JSON.stringify(
    V1UniswapLiquidityProvisionPositionsRequest$outboundSchema.parse(
      v1UniswapLiquidityProvisionPositionsRequest,
    ),
  );
}

export function v1UniswapLiquidityProvisionPositionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  V1UniswapLiquidityProvisionPositionsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V1UniswapLiquidityProvisionPositionsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'V1UniswapLiquidityProvisionPositionsRequest' from JSON`,
  );
}
