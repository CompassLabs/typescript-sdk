/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const V1GenericPortfolioChain = {
  Arbitrum: "arbitrum",
  Base: "base",
  Ethereum: "ethereum",
} as const;
export type V1GenericPortfolioChain = ClosedEnum<
  typeof V1GenericPortfolioChain
>;

export type V1GenericPortfolioRequest = {
  chain?: V1GenericPortfolioChain | undefined;
  /**
   * The user to get portfolio for.
   */
  user?: string | undefined;
};

/** @internal */
export const V1GenericPortfolioChain$inboundSchema: z.ZodNativeEnum<
  typeof V1GenericPortfolioChain
> = z.nativeEnum(V1GenericPortfolioChain);

/** @internal */
export const V1GenericPortfolioChain$outboundSchema: z.ZodNativeEnum<
  typeof V1GenericPortfolioChain
> = V1GenericPortfolioChain$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1GenericPortfolioChain$ {
  /** @deprecated use `V1GenericPortfolioChain$inboundSchema` instead. */
  export const inboundSchema = V1GenericPortfolioChain$inboundSchema;
  /** @deprecated use `V1GenericPortfolioChain$outboundSchema` instead. */
  export const outboundSchema = V1GenericPortfolioChain$outboundSchema;
}

/** @internal */
export const V1GenericPortfolioRequest$inboundSchema: z.ZodType<
  V1GenericPortfolioRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  chain: V1GenericPortfolioChain$inboundSchema.default("arbitrum"),
  user: z.string().default("0x29F20a192328eF1aD35e1564aBFf4Be9C5ce5f7B"),
});

/** @internal */
export type V1GenericPortfolioRequest$Outbound = {
  chain: string;
  user: string;
};

/** @internal */
export const V1GenericPortfolioRequest$outboundSchema: z.ZodType<
  V1GenericPortfolioRequest$Outbound,
  z.ZodTypeDef,
  V1GenericPortfolioRequest
> = z.object({
  chain: V1GenericPortfolioChain$outboundSchema.default("arbitrum"),
  user: z.string().default("0x29F20a192328eF1aD35e1564aBFf4Be9C5ce5f7B"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1GenericPortfolioRequest$ {
  /** @deprecated use `V1GenericPortfolioRequest$inboundSchema` instead. */
  export const inboundSchema = V1GenericPortfolioRequest$inboundSchema;
  /** @deprecated use `V1GenericPortfolioRequest$outboundSchema` instead. */
  export const outboundSchema = V1GenericPortfolioRequest$outboundSchema;
  /** @deprecated use `V1GenericPortfolioRequest$Outbound` instead. */
  export type Outbound = V1GenericPortfolioRequest$Outbound;
}

export function v1GenericPortfolioRequestToJSON(
  v1GenericPortfolioRequest: V1GenericPortfolioRequest,
): string {
  return JSON.stringify(
    V1GenericPortfolioRequest$outboundSchema.parse(v1GenericPortfolioRequest),
  );
}

export function v1GenericPortfolioRequestFromJSON(
  jsonString: string,
): SafeParseResult<V1GenericPortfolioRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1GenericPortfolioRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1GenericPortfolioRequest' from JSON`,
  );
}
