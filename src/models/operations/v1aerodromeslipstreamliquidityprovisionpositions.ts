/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const V1AerodromeSlipstreamLiquidityProvisionPositionsChain = {
  Base: "base",
} as const;
export type V1AerodromeSlipstreamLiquidityProvisionPositionsChain = ClosedEnum<
  typeof V1AerodromeSlipstreamLiquidityProvisionPositionsChain
>;

export type V1AerodromeSlipstreamLiquidityProvisionPositionsRequest = {
  chain?: V1AerodromeSlipstreamLiquidityProvisionPositionsChain | undefined;
  /**
   * The user to get positions for.
   */
  user?: string | undefined;
};

/** @internal */
export const V1AerodromeSlipstreamLiquidityProvisionPositionsChain$inboundSchema:
  z.ZodNativeEnum<
    typeof V1AerodromeSlipstreamLiquidityProvisionPositionsChain
  > = z.nativeEnum(V1AerodromeSlipstreamLiquidityProvisionPositionsChain);

/** @internal */
export const V1AerodromeSlipstreamLiquidityProvisionPositionsChain$outboundSchema:
  z.ZodNativeEnum<
    typeof V1AerodromeSlipstreamLiquidityProvisionPositionsChain
  > = V1AerodromeSlipstreamLiquidityProvisionPositionsChain$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AerodromeSlipstreamLiquidityProvisionPositionsChain$ {
  /** @deprecated use `V1AerodromeSlipstreamLiquidityProvisionPositionsChain$inboundSchema` instead. */
  export const inboundSchema =
    V1AerodromeSlipstreamLiquidityProvisionPositionsChain$inboundSchema;
  /** @deprecated use `V1AerodromeSlipstreamLiquidityProvisionPositionsChain$outboundSchema` instead. */
  export const outboundSchema =
    V1AerodromeSlipstreamLiquidityProvisionPositionsChain$outboundSchema;
}

/** @internal */
export const V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$inboundSchema:
  z.ZodType<
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    chain: V1AerodromeSlipstreamLiquidityProvisionPositionsChain$inboundSchema
      .default("base"),
    user: z.string().default("0x29F20a192328eF1aD35e1564aBFf4Be9C5ce5f7B"),
  });

/** @internal */
export type V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$Outbound = {
  chain: string;
  user: string;
};

/** @internal */
export const V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$outboundSchema:
  z.ZodType<
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$Outbound,
    z.ZodTypeDef,
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest
  > = z.object({
    chain: V1AerodromeSlipstreamLiquidityProvisionPositionsChain$outboundSchema
      .default("base"),
    user: z.string().default("0x29F20a192328eF1aD35e1564aBFf4Be9C5ce5f7B"),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$ {
  /** @deprecated use `V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$inboundSchema;
  /** @deprecated use `V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$outboundSchema;
  /** @deprecated use `V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$Outbound` instead. */
  export type Outbound =
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$Outbound;
}

export function v1AerodromeSlipstreamLiquidityProvisionPositionsRequestToJSON(
  v1AerodromeSlipstreamLiquidityProvisionPositionsRequest:
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest,
): string {
  return JSON.stringify(
    V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$outboundSchema
      .parse(v1AerodromeSlipstreamLiquidityProvisionPositionsRequest),
  );
}

export function v1AerodromeSlipstreamLiquidityProvisionPositionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  V1AerodromeSlipstreamLiquidityProvisionPositionsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      V1AerodromeSlipstreamLiquidityProvisionPositionsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'V1AerodromeSlipstreamLiquidityProvisionPositionsRequest' from JSON`,
  );
}
