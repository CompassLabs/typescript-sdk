/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Successful Response
 */
export type ResponseV1TransactionBundlerAaveLoop =
  | components.BundlerTransactionResponse
  | components.BatchedUserOperationsResponse;

/** @internal */
export const ResponseV1TransactionBundlerAaveLoop$inboundSchema: z.ZodType<
  ResponseV1TransactionBundlerAaveLoop,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.BundlerTransactionResponse$inboundSchema,
  components.BatchedUserOperationsResponse$inboundSchema,
]);

/** @internal */
export type ResponseV1TransactionBundlerAaveLoop$Outbound =
  | components.BundlerTransactionResponse$Outbound
  | components.BatchedUserOperationsResponse$Outbound;

/** @internal */
export const ResponseV1TransactionBundlerAaveLoop$outboundSchema: z.ZodType<
  ResponseV1TransactionBundlerAaveLoop$Outbound,
  z.ZodTypeDef,
  ResponseV1TransactionBundlerAaveLoop
> = z.union([
  components.BundlerTransactionResponse$outboundSchema,
  components.BatchedUserOperationsResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseV1TransactionBundlerAaveLoop$ {
  /** @deprecated use `ResponseV1TransactionBundlerAaveLoop$inboundSchema` instead. */
  export const inboundSchema =
    ResponseV1TransactionBundlerAaveLoop$inboundSchema;
  /** @deprecated use `ResponseV1TransactionBundlerAaveLoop$outboundSchema` instead. */
  export const outboundSchema =
    ResponseV1TransactionBundlerAaveLoop$outboundSchema;
  /** @deprecated use `ResponseV1TransactionBundlerAaveLoop$Outbound` instead. */
  export type Outbound = ResponseV1TransactionBundlerAaveLoop$Outbound;
}

export function responseV1TransactionBundlerAaveLoopToJSON(
  responseV1TransactionBundlerAaveLoop: ResponseV1TransactionBundlerAaveLoop,
): string {
  return JSON.stringify(
    ResponseV1TransactionBundlerAaveLoop$outboundSchema.parse(
      responseV1TransactionBundlerAaveLoop,
    ),
  );
}

export function responseV1TransactionBundlerAaveLoopFromJSON(
  jsonString: string,
): SafeParseResult<ResponseV1TransactionBundlerAaveLoop, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ResponseV1TransactionBundlerAaveLoop$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseV1TransactionBundlerAaveLoop' from JSON`,
  );
}
