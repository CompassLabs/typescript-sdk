/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V1GenericSupportedChainsRequest = {
  /**
   * The protocol to get the supported chains for.
   */
  protocol?: components.Protocol | null | undefined;
};

/** @internal */
export const V1GenericSupportedChainsRequest$inboundSchema: z.ZodType<
  V1GenericSupportedChainsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  protocol: z.nullable(components.Protocol$inboundSchema).optional(),
});

/** @internal */
export type V1GenericSupportedChainsRequest$Outbound = {
  protocol?: string | null | undefined;
};

/** @internal */
export const V1GenericSupportedChainsRequest$outboundSchema: z.ZodType<
  V1GenericSupportedChainsRequest$Outbound,
  z.ZodTypeDef,
  V1GenericSupportedChainsRequest
> = z.object({
  protocol: z.nullable(components.Protocol$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1GenericSupportedChainsRequest$ {
  /** @deprecated use `V1GenericSupportedChainsRequest$inboundSchema` instead. */
  export const inboundSchema = V1GenericSupportedChainsRequest$inboundSchema;
  /** @deprecated use `V1GenericSupportedChainsRequest$outboundSchema` instead. */
  export const outboundSchema = V1GenericSupportedChainsRequest$outboundSchema;
  /** @deprecated use `V1GenericSupportedChainsRequest$Outbound` instead. */
  export type Outbound = V1GenericSupportedChainsRequest$Outbound;
}

export function v1GenericSupportedChainsRequestToJSON(
  v1GenericSupportedChainsRequest: V1GenericSupportedChainsRequest,
): string {
  return JSON.stringify(
    V1GenericSupportedChainsRequest$outboundSchema.parse(
      v1GenericSupportedChainsRequest,
    ),
  );
}

export function v1GenericSupportedChainsRequestFromJSON(
  jsonString: string,
): SafeParseResult<V1GenericSupportedChainsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V1GenericSupportedChainsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1GenericSupportedChainsRequest' from JSON`,
  );
}
